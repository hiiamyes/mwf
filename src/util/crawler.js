// Generated by CoffeeScript 1.9.2
(function() {
  var Forecast, async, cheerio, collectionName, connection, env, forecastSchema, moment, mongoose, mountains, request;

  env = process.env.NODE_ENV || 'dev';

  console.log(env + ' mode');

  collectionName = env === 'production' ? 'forecasts' : 'forecast_dev';

  async = require('async');

  moment = require('moment');

  request = require('request');

  cheerio = require('cheerio');

  mongoose = require('mongoose');

  mountains = require('../res/mountains.json');

  forecastSchema = mongoose.Schema({
    nameZh: String,
    forecast: {
      week: [],
      hour: []
    }
  });

  Forecast = mongoose.model(collectionName, forecastSchema);

  mongoose.connect('mongodb://yes:yes@ds035280.mongolab.com:35280/hiking');

  connection = mongoose.connection;

  connection.on('error', console.error.bind(console, 'connection error:'));

  connection.once('open', function(callback) {
    var j, len, mountain, results1;
    results1 = [];
    for (j = 0, len = mountains.length; j < len; j++) {
      mountain = mountains[j];
      results1.push(async.parallel({
        nameZh: function(callback) {
          return callback(null, mountain.nameZh);
        },
        forecastsHour: function(callback) {
          return request(mountain.forecast.urlHour, function(err, res, body) {
            var $, dayAdd, forecastOneDay, forecasts, hourPre, iPop, pop;
            if (err) {
              return callback('Hour crawling fail.', null);
            } else {
              $ = cheerio.load(body);
              forecasts = [];
              forecastOneDay = [];
              hourPre = 0;
              dayAdd = 0;
              pop = '';
              iPop = 2;
              $('tr:nth-child(2) td span').each(function(i) {
                var hour, popEle, popNext;
                hour = Number.parseInt($(this).text().split(':')[0]);
                if (hourPre > hour) {
                  dayAdd++;
                  forecasts.push(forecastOneDay);
                  forecastOneDay = [];
                }
                popNext = '';
                if (pop === '') {
                  popEle = $('tr:nth-child(8) td:nth-child(' + iPop + ')');
                  pop = popEle.text();
                  iPop++;
                  if (popEle.attr('colspan') === '2') {
                    popNext = pop;
                  }
                }
                forecastOneDay.push({
                  time: moment($(this).text(), 'HH:mm').add(dayAdd, 'd').format(),
                  weather: {
                    img: 'http://www.cwb.gov.tw' + $('tr:nth-child(3) td:nth-child(' + (i + 2) + ')').find('img').attr('src'),
                    title: $('tr:nth-child(3) td:nth-child(' + (i + 2) + ')').find('img').attr('title')
                  },
                  probabilityOfPrecipitation: pop
                });
                hourPre = hour;
                return pop = popNext;
              });
              forecasts.push(forecastOneDay);
              return callback(null, forecasts);
            }
          });
        },
        forecastsWeek: function(callback) {
          return request(mountain.forecast.urlWeek, function(err, res, body) {
            var $, forecasts, i, k;
            if (err) {
              return callback('Week crawling fail.', null);
            } else {
              $ = cheerio.load(body);
              forecasts = [];
              for (i = k = 0; k <= 6; i = ++k) {
                forecasts.push({
                  daytime: {
                    time: moment().add(i, 'd').format(),
                    weather: {
                      img: 'http://www.cwb.gov.tw' + $('tr:nth-child(3) td:nth-child(' + (2 * i + 2) + ')').find('img').attr('src'),
                      title: $('tr:nth-child(3) td:nth-child(' + (2 * i + 2) + ')').find('img').attr('title')
                    },
                    probabilityOfPrecipitation: $('tr:nth-child(9) td:nth-child(' + (2 * i + 2) + ')').text()
                  },
                  night: {
                    time: moment().add(i, 'd').format(),
                    weather: {
                      img: 'http://www.cwb.gov.tw' + $('tr:nth-child(3) td:nth-child(' + (2 * i + 2) + ')').find('img').attr('src'),
                      title: $('tr:nth-child(3) td:nth-child(' + (2 * i + 3) + ')').find('img').attr('title')
                    },
                    probabilityOfPrecipitation: $('tr:nth-child(9) td:nth-child(' + (2 * i + 3) + ')').text()
                  }
                });
              }
              return callback(null, forecasts);
            }
          });
        }
      }, function(err, results) {
        if (err) {
          return console.log('Crawling fail: ' + err);
        } else {
          return Forecast.update({
            nameZh: results.nameZh
          }, {
            $set: {
              'forecast.hour': results.forecastsHour,
              'forecast.week': results.forecastsWeek
            }
          }, function(err, raw) {
            if (err) {
              console.log('gg');
            }
            return console.log('done');
          });
        }
      }));
    }
    return results1;
  });

}).call(this);
